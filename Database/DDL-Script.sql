DROP DATABASE IF EXISTS ShoppingListStore;
GO

CREATE DATABASE ShoppingListStore;
GO

USE ShoppingListStore;
GO

DROP TABLE IF EXISTS ListUser;
GO

CREATE TABLE ListUser(
UserID								UNIQUEIDENTIFIER NOT NULL DEFAULT NEWID(),
FirstName							NVARCHAR(100) NOT NULL,
LastName							NVARCHAR(100) NOT NULL,
EmailAddress						NVARCHAR(200) NOT NULL,
PasswordHash						NVARCHAR(200) NOT NULL,
CreationDateTime					DATETIMEOFFSET NOT NULL DEFAULT SYSDATETIMEOFFSET() AT TIME ZONE 'UTC',
ApiKey								NVARCHAR(500) NOT NULL,
ApiKeyExpirationDateTime			DATETIMEOFFSET NOT NULL,
CONSTRAINT PK_ListUser_UserID PRIMARY KEY (UserID)
);

DROP TABLE IF EXISTS ShoppingList;
GO

CREATE TABLE ShoppingList(
ShoppingListID						UNIQUEIDENTIFIER NOT NULL DEFAULT NEWID(),
ShoppingListName					NVARCHAR(200),
CONSTRAINT PK_ShoppingList_ShoppingListID PRIMARY KEY (ShoppingListID)
);

DROP TABLE IF EXISTS Item;
GO

CREATE TABLE Item(
ItemID								UNIQUEIDENTIFIER NOT NULL DEFAULT NEWID(),
ShoppingListID						UNIQUEIDENTIFIER NOT NULL,
ItemName							NVARCHAR(200),
ItemAmount							NVARCHAR(200)
CONSTRAINT PK_Item_ItemID PRIMARY KEY (ItemID),
CONSTRAINT FK_Item_ShoppingListID FOREIGN KEY (ShoppingListID)
	REFERENCES ShoppingList(ShoppingListID)
	ON DELETE NO ACTION
	ON UPDATE NO ACTION
);

DROP TABLE IF EXISTS UserRole;
GO 

CREATE TABLE UserRole(
UserRoleID						UNIQUEIDENTIFIER NOT NULL DEFAULT NEWID(),
UserRoleTitle					NVARCHAR(100),
EnumIndex						INT NOT NULL,
CONSTRAINT PK_UserRole_UserRoleID PRIMARY KEY (UserRoleID)
);

DROP TABLE IF EXISTS ListMember;
GO

CREATE TABLE ListMember(
ShoppingListID					UNIQUEIDENTIFIER NOT NULL,
UserID							UNIQUEIDENTIFIER NOT NULL,
UserRoleID						UNIQUEIDENTIFIER NOT NULL,
CONSTRAINT PK_MemberList_Compound PRIMARY KEY (ShoppingListID, UserID, UserRoleID),
CONSTRAINT FK_MemberList_ShoppingListID FOREIGN KEY (ShoppingListID)
	REFERENCES ShoppingList (ShoppingListID)
	ON DELETE NO ACTION
	ON UPDATE NO ACTION,
CONSTRAINT FK_MemberList_ListUserID FOREIGN KEY (UserID)
	REFERENCES ListUser (UserID)
	ON DELETE NO ACTION
	ON UPDATE NO ACTION,
CONSTRAINT FK_MemberList_UserRoleID FOREIGN KEY (UserRoleID)
	REFERENCES UserRole (UserRoleID)
	ON DELETE NO ACTION
	ON UPDATE NO ACTION
);

ALTER DATABASE ShoppingListStore SET ALLOW_SNAPSHOT_ISOLATION ON;
ALTER DATABASE ShoppingListStore SET READ_COMMITTED_SNAPSHOT ON;
GO